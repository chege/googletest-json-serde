name: CI

on:
  pull_request:
  push:
    branches: [ main, "*-dev" ]

permissions:
  contents: read  # least-privilege

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Format
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy (stable)
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: clippy (stable, deny warnings)
        env:
          RUSTFLAGS: -D warnings
        run: cargo clippy --all-targets --all-features -- -D warnings

  msrv:
    name: MSRV 1.89.0 build
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@1.100.0
      - uses: Swatinem/rust-cache@v2
      - name: Build on MSRV (locked)
        run: cargo build --all-features --locked

  docs:
    name: Docs build
    needs: [format, clippy]
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build docs (deny warnings)
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --all-features --no-deps

  minimal-versions:
    name: Minimal dependency versions
    needs: [format, clippy]
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Generate minimal lockfile
        run: cargo +nightly generate-lockfile -Z minimal-versions
      - name: Build with minimal versions
        run: cargo +nightly build --all-features --locked

  test:
    name: Tests (stable)
    needs: [format, clippy, msrv]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build (locked)
        env:
          RUSTFLAGS: -D warnings
        run: cargo build --all-features --locked
      - name: Run unit + integration tests
        env:
          RUSTFLAGS: -D warnings
        run: cargo test --all-features -- --nocapture